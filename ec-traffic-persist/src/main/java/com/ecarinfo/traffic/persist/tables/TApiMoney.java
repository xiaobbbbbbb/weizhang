package com.ecarinfo.traffic.persist.tables;
import com.ecarinfo.db4j.table.AllField;
import com.ecarinfo.db4j.table.AbstractTable;
import com.ecarinfo.db4j.table.TableField;
import com.ecarinfo.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.ecarinfo.db4j.table.DateTableField;
import com.ecarinfo.db4j.table.DateTableFieldImpl;

public class TApiMoney extends AbstractTable {

	static {
		init();
	}

	private TApiMoney(){
		super.tableName = "api_money";
	}

	private TApiMoney(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TApiMoney getInstance() {
		return new TApiMoney();
	}

	public static final TApiMoney getInstance(String aliasName) {
		return new TApiMoney(aliasName);
	}

	private static Map<String, String> allFieldMap;// = new HashMap<String, String>();
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("name", "name");
		allFieldMap.put("type", "type");
		allFieldMap.put("orgCode", "org_code");
		allFieldMap.put("money", "money");
		allFieldMap.put("status", "status");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");

	}

	@Override
	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	@SuppressWarnings("rawtypes")
	@Override
	public TableField allField() {
		return all;
	}

	/**
	 * | int(11)
	*/
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"id","id","");
	public final TableField<Integer> id = new TableFieldImpl<Integer>(this,"id","id","");

	/**
	 *收费描述 | char(200)
	*/
	public final TableField<String> name = new TableFieldImpl<String>(this,"name","name","收费描述");

	/**
	 *收费类型(1:按单个请求，2.按年，3：按月，4：按日) | int(11)
	*/
	public final TableField<Integer> type = new TableFieldImpl<Integer>(this,"type","type","收费类型(1:按单个请求，2.按年，3：按月，4：按日)");

	/**
	 *机构编号(-1代表所有机构) | char(6)
	*/
	public final TableField<String> orgCode = new TableFieldImpl<String>(this,"org_code","orgCode","机构编号(-1代表所有机构)");

	/**
	 *单价（元） | float
	*/
	public final TableField<Float> money = new TableFieldImpl<Float>(this,"money","money","单价（元）");

	/**
	 *状态 | int(11)
	*/
	public final TableField<Integer> status = new TableFieldImpl<Integer>(this,"status","status","状态");

	/**
	 *创建时间 | datetime
	*/
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 *更新时间 | datetime
	*/
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","更新时间");


	private final TableField<?>[] allFields = new TableField<?>[] {id,name,type,orgCode,money,status,createTime,updateTime};

	@Override
	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	@Override
	public TableField<?> getPK() {
		return pk;
	}

	@Override
	public final boolean isAutoGeneratedPK() {
		return true;
	}

	@Override
	public String toString() {
		return "TApiMoney[table=api_money]";
	}

}
