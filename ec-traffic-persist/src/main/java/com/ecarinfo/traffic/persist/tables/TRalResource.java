package com.ecarinfo.traffic.persist.tables;
import com.ecarinfo.db4j.table.AllField;
import com.ecarinfo.db4j.table.AbstractTable;
import com.ecarinfo.db4j.table.TableField;
import com.ecarinfo.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;

public class TRalResource extends AbstractTable {

	static {
		init();
	}

	private TRalResource(){
		super.tableName = "ral_resource";
	}

	private TRalResource(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TRalResource getInstance() {
		return new TRalResource();
	}

	public static final TRalResource getInstance(String aliasName) {
		return new TRalResource(aliasName);
	}

	private static Map<String, String> allFieldMap;// = new HashMap<String, String>();
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("resourceId", "resource_id");
		allFieldMap.put("name", "name");
		allFieldMap.put("url", "url");
		allFieldMap.put("icon", "icon");
		allFieldMap.put("parentId", "parent_id");
		allFieldMap.put("level", "level");
		allFieldMap.put("isLeaf", "is_leaf");
		allFieldMap.put("message", "message");
		allFieldMap.put("type", "type");

	}

	@Override
	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	@SuppressWarnings("rawtypes")
	@Override
	public TableField allField() {
		return all;
	}

	/**
	 *资源id | int(11)
	*/
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"resource_id","resourceId","资源id");
	public final TableField<Integer> resourceId = new TableFieldImpl<Integer>(this,"resource_id","resourceId","资源id");

	/**
	 *资源名称 | varchar(255)
	*/
	public final TableField<String> name = new TableFieldImpl<String>(this,"name","name","资源名称");

	/**
	 *资源地址 | varchar(255)
	*/
	public final TableField<String> url = new TableFieldImpl<String>(this,"url","url","资源地址");

	/**
	 *图标 | varchar(255)
	*/
	public final TableField<String> icon = new TableFieldImpl<String>(this,"icon","icon","图标");

	/**
	 *父资源id | int(11)
	*/
	public final TableField<Integer> parentId = new TableFieldImpl<Integer>(this,"parent_id","parentId","父资源id");

	/**
	 *资源排序级别 | int(11)
	*/
	public final TableField<Integer> level = new TableFieldImpl<Integer>(this,"level","level","资源排序级别");

	/**
	 *是否是叶子 | int(11)
	*/
	public final TableField<Integer> isLeaf = new TableFieldImpl<Integer>(this,"is_leaf","isLeaf","是否是叶子");

	/**
	 *描述 | varchar(255)
	*/
	public final TableField<String> message = new TableFieldImpl<String>(this,"message","message","描述");

	/**
	 *0为系统资源，1未用户资源，2即是系统资源又是用户资源 | int(11)
	*/
	public final TableField<Integer> type = new TableFieldImpl<Integer>(this,"type","type","0为系统资源，1未用户资源，2即是系统资源又是用户资源");


	private final TableField<?>[] allFields = new TableField<?>[] {resourceId,name,url,icon,parentId,level,isLeaf,message,type};

	@Override
	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	@Override
	public TableField<?> getPK() {
		return pk;
	}

	@Override
	public final boolean isAutoGeneratedPK() {
		return true;
	}

	@Override
	public String toString() {
		return "TRalResource[table=ral_resource]";
	}

}
