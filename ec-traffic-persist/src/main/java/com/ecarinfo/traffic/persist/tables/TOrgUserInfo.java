package com.ecarinfo.traffic.persist.tables;
import com.ecarinfo.db4j.table.AllField;
import com.ecarinfo.db4j.table.AbstractTable;
import com.ecarinfo.db4j.table.TableField;
import com.ecarinfo.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.ecarinfo.db4j.table.DateTableField;
import com.ecarinfo.db4j.table.DateTableFieldImpl;

public class TOrgUserInfo extends AbstractTable {

	static {
		init();
	}

	private TOrgUserInfo(){
		super.tableName = "org_user_info";
	}

	private TOrgUserInfo(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TOrgUserInfo getInstance() {
		return new TOrgUserInfo();
	}

	public static final TOrgUserInfo getInstance(String aliasName) {
		return new TOrgUserInfo(aliasName);
	}

	private static Map<String, String> allFieldMap;// = new HashMap<String, String>();
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("nickName", "nick_name");
		allFieldMap.put("userName", "user_name");
		allFieldMap.put("password", "password");
		allFieldMap.put("orgCode", "org_code");
		allFieldMap.put("job", "job");
		allFieldMap.put("email", "email");
		allFieldMap.put("tel", "tel");
		allFieldMap.put("status", "status");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");

	}

	@Override
	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	@SuppressWarnings("rawtypes")
	@Override
	public TableField allField() {
		return all;
	}

	/**
	 * | int(11)
	*/
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"id","id","");
	public final TableField<Integer> id = new TableFieldImpl<Integer>(this,"id","id","");

	/**
	 *名字 | char(50)
	*/
	public final TableField<String> nickName = new TableFieldImpl<String>(this,"nick_name","nickName","名字");

	/**
	 *姓名 | char(50)
	*/
	public final TableField<String> userName = new TableFieldImpl<String>(this,"user_name","userName","姓名");

	/**
	 * | char(40)
	*/
	public final TableField<String> password = new TableFieldImpl<String>(this,"password","password","");

	/**
	 *机构代号 | char(6)
	*/
	public final TableField<String> orgCode = new TableFieldImpl<String>(this,"org_code","orgCode","机构代号");

	/**
	 *岗位 | char(40)
	*/
	public final TableField<String> job = new TableFieldImpl<String>(this,"job","job","岗位");

	/**
	 *邮箱 | char(50)
	*/
	public final TableField<String> email = new TableFieldImpl<String>(this,"email","email","邮箱");

	/**
	 * | char(20)
	*/
	public final TableField<String> tel = new TableFieldImpl<String>(this,"tel","tel","");

	/**
	 *状态 | int(11)
	*/
	public final TableField<Integer> status = new TableFieldImpl<Integer>(this,"status","status","状态");

	/**
	 *注册时间 | datetime
	*/
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","注册时间");

	/**
	 *更新时间 | datetime
	*/
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","更新时间");


	private final TableField<?>[] allFields = new TableField<?>[] {id,nickName,userName,password,orgCode,job,email,tel,status,createTime,updateTime};

	@Override
	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	@Override
	public TableField<?> getPK() {
		return pk;
	}

	@Override
	public final boolean isAutoGeneratedPK() {
		return true;
	}

	@Override
	public String toString() {
		return "TOrgUserInfo[table=org_user_info]";
	}

}
